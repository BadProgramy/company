<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Employee">
    <resultMap id="result" type="Employee">
        <result property="id" column="id"/>
        <result property="idPost" column="idPost"/>
        <result property="idDepartment" column="idDepartment"/>
        <result property="firstName" column="firstName"/>
        <result property="secondName" column="secondName"/>
        <result property="thirdName" column="thirdName"/>
        <result property="floor" column="floor"/>
        <result property="birthDate" column="birthDate"/>
        <result property="contactNumber" column="contactNumber"/>
        <result property="email" column="email"/>
        <result property="reception" column="reception"/>
        <result property="layoff" column="layoff"/>
        <result property="salary" column="salary"/>
        <result property="head" column="head"/>
    </resultMap>

    <insert id="insert" parameterType="Employee" keyProperty="id">
        INSERT INTO employee (id,iddepartment,idpost,firstname,secondname, thirdname,
        floor,birthdate,contactnumber,email,reception,salary,head)
         VALUES (nextval('nextIdEmployee'),#{idDepartment},#{idPost},#{firstName},#{secondName},#{thirdName},#{floor},
         #{birthDate},#{contactNumber},#{email},#{reception},#{salary},#{head});
    </insert>

    <update id="update" parameterType="Employee">
        UPDATE employee SET idpost = #{idPost}, iddepartment = #{idDepartment},  firstname = #{firstName},
         secondname = #{secondName}, thirdname = #{thirdName}, floor = #{floor}, birthdate = #{birthDate},
         contactnumber = #{contactNumber}, email = #{email}, reception = #{reception}, layoff = #{layoff},
         salary = #{salary}, head = #{head}
         WHERE id = #{id};
    </update>

    <select id="selectAll" resultMap="result">
        SELECT * FROM employee;
    </select>

    <select id="selectById" parameterType="int" resultMap="result">
        SELECT * FROM employee WHERE id = #{id};
    </select>

    <select id="headEmployeeInDepartment" parameterType="int" resultMap="result">
        select * from employee where iddepartment = #{id} and head = true and layoff is NULL;
    </select>

    <select id="countEmployeesInDepartment" parameterType="int" resultType="int">
        select count(*) from employee where iddepartment = #{id} and layoff is NULL;
    </select>

    <select id="employeesByIdDepartment" parameterType="int" resultMap="result">
        select * from employee where iddepartment = #{idDepartment} and layoff is NULL;
    </select>

    <update id="layoff" parameterType="Employee">
        UPDATE employee SET layoff = #{layoff} WHERE id = #{id};
    </update>

    <update id="updateDepartmentByIdEmployee" parameterType="Employee">
        UPDATE employee SET iddepartment = #{idDepartment}, head = false WHERE id = #{id};
    </update>

    <update id="updateDepartmentAllEmployees" parameterType="java.util.Map">
        UPDATE employee SET iddepartment = #{idNextDepartment}, head = false
        WHERE iddepartment = #{idCurrentDepartment} and layoff is NULL;
    </update>

    <select id="findEmployeeByName" parameterType="java.util.Map" resultMap="result">
        select * from employee where firstname = #{firstName} and secondname = #{secondName}
         order by firstname DESC, secondname DESC LIMIT 1;
    </select>

    <select id="maxSalaryInDepartment" parameterType="int" resultType="float">
        select max(salary) AS maxSalary from employee where iddepartment = #{idDepartment} and layoff is NULL;
    </select>

    <delete id="delete" parameterType="int">
        delete from employee where id = #{id};
    </delete>
</mapper>